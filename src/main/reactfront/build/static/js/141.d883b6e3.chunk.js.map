{"version":3,"file":"static/js/141.d883b6e3.chunk.js","mappings":"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","sources":["api/System/SystemApi.js","components/dashboard/ProjectTable.js","views/IManage.js","../node_modules/reactstrap/esm/Table.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst TOKEN_TYPE = localStorage.getItem(\"tokenType\");\r\nlet ACCESS_TOKEN = localStorage.getItem(\"accessToken\");\r\nlet REFRESH_TOKEN = localStorage.getItem(\"refreshToken\");\r\n\r\nexport const SystemApi = axios.create({\r\n    baseURL: 'http://localhost:8080/system', // 백엔드 API 엔드포인트\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `${TOKEN_TYPE} ${ACCESS_TOKEN}`,\r\n        'REFRESH_TOKEN': REFRESH_TOKEN,\r\n    },\r\n});\r\n\r\n// API 호출\r\nexport const getSystemList = async () => {\r\n    try {\r\n        const response = await SystemApi.get('/select');\r\n        console.log('백엔드 응답:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('에러 발생:', error);\r\n        return []; // 에러 발생 시 빈 배열 반환\r\n    }\r\n};\r\n\r\nexport const insertSystem =\r\n    async ({ systemId, systemName, systemDesc, ipAddr, systemType, systemCategory\r\n    }) => {\r\n    try {\r\n        const data = { systemId, systemName, systemDesc, ipAddr, systemType, systemCategory\r\n        };\r\n        const response = await SystemApi.post('/save', data\r\n             // 다른 헤더도 필요하다면 추가 가능\r\n        );\r\n\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('에러 발생:', error);\r\n        return []; // 에러 발생 시 빈 배열 반환\r\n    }\r\n};\r\n\r\nexport const updateSystem = async () => {\r\n    try {\r\n        const response = await SystemApi.get('/update');\r\n        console.log('백엔드 응답:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('에러 발생:', error);\r\n        return []; // 에러 발생 시 빈 배열 반환\r\n    }\r\n};\r\n\r\nexport const deleteSystem = async () => {\r\n    try {\r\n        const response = await SystemApi.get('/delete');\r\n        console.log('백엔드 응답:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('에러 발생:', error);\r\n        return []; // 에러 발생 시 빈 배열 반환\r\n    }\r\n};\r\n","import {useState, useEffect} from \"react\";\r\nimport {Button, Card, CardBody, Table} from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\nimport {getSystemList} from \"../../api/System/SystemApi\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction ProjectTable() {\r\n\r\n  const [systems, setSystems] = useState([]);\r\n    const accessToken = localStorage.getItem(\"accessToken\");\r\n    const username = localStorage.getItem(\"username\");\r\n    console.log(\"토큰 : \" + accessToken +\"\\n\"\r\n                +\"username : \" + username);\r\n    useEffect(() => {\r\n        if( accessToken == null){\r\n            alert(\"로그인하세요\");\r\n            window.location = '/';\r\n        }else{\r\n            const fetchData = async () => {\r\n                const data = await getSystemList();\r\n                console.log('백엔드 응답 데이터:', data);\r\n                setSystems(data);\r\n                // ...데이터를 처리하는 로직 작성\r\n            };\r\n\r\n            fetchData();\r\n        }\r\n\r\n    }, []); //\r\n\r\n\r\n\r\n  return (\r\n      <div>\r\n        <Card>\r\n          <CardBody>\r\n            {/*<CardTitle tag=\"h5\">Project Listing</CardTitle>*/}\r\n            {/*<CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">*/}\r\n            {/*  Overview of the projects*/}\r\n            {/*</CardSubtitle>*/}\r\n\r\n            <Table className=\"no-wrap mt-3 align-middle text-center\" Table bordered hover >\r\n              <thead>\r\n              <tr>\r\n                <th><input\r\n                    type=\"checkbox\"\r\n                    // checked={checkboxes.every(checkbox => checkbox.checked)}\r\n                    // onChange={handleSelectAll}\r\n                /></th>\r\n                  <th>시스템 ID</th>\r\n                  <th>시스템명</th>\r\n                  <th>시스템유형</th>\r\n                  <th>IP</th>\r\n                  <th>계정수</th>\r\n                  <th>관리자</th>\r\n                  <th>생성일자</th>\r\n                  <th>동기화일자</th>\r\n                  <th>동기화여부</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              {systems.map((system,index) => (\r\n                  <tr key={index} className=\"border-top\">\r\n                      <td>\r\n                          <input type=\"checkbox\"/>\r\n                      </td>\r\n                    <td>\r\n                        {/*<img*/}\r\n                        {/*  src={tdata.avatar}*/}\r\n                        {/*  className=\"rounded-circle\"*/}\r\n                        {/*  alt=\"avatar\"*/}\r\n                        {/*  width=\"45\"*/}\r\n                        {/*  height=\"45\"*/}\r\n                        {/*/>*/}\r\n                        {system.systemId}\r\n                        <Link to={{ pathname: '../../AdminForms', search: `?param=${system.systemId}` }}\r\n                              style={{textDecorationLine:'none',color:'black'}}>\r\n                            <Button className=\"btn\" outline color=\"secondary\">\r\n                                관리자등록\r\n                            </Button>\r\n                        </Link>\r\n                    </td>\r\n                    <td>{system.systemName}</td>\r\n                      <td>{system.systemType}</td>\r\n                      <td>{system.ipAddr}</td>\r\n                    <td>3</td>\r\n                    <td>1</td>\r\n                      <td>{system.createDt}</td>\r\n                      <td>{system.syncDt}</td>\r\n                      <td>\r\n                          {system.syncYn === \"N\" ? (\r\n                              <span className=\"p-2 bg-danger rounded-circle d-inline-block\"></span>\r\n                          ) : (\r\n                              <span className=\"p-2 bg-success rounded-circle d-inline-block\"></span>\r\n                          )}\r\n                      </td>\r\n                  </tr>\r\n              ))}\r\n              </tbody>\r\n            </Table>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ProjectTable;\r\n\r\n\r\n\r\n\r\n\r\n// const tableData = [\r\n//   {\r\n//    // avatar: user1,\r\n//     id: \"System1\",\r\n//     email: \"CentOS\",\r\n//     project: \"192.168.10.1\",\r\n//     weeks: \"35\",\r\n//     admin: \"-\",\r\n//     budget: \"2023-11-01\",\r\n//     status: \"N\",\r\n//     checked:false\r\n//   },\r\n//   {\r\n//    // avatar: user2,\r\n//     id: \"System2\",\r\n//     email: \"RedHat\",\r\n//     project: \"192.168.10.2\",\r\n//     weeks: \"35\",\r\n//     admin: \"-\",\r\n//     budget: \"2023-11-02\",\r\n//     status: \"Y\",\r\n//     checked:false\r\n//   },\r\n//   {\r\n//   //  avatar: user3,\r\n//     id: \"System3\",\r\n//     email: \"Windows\",\r\n//     project: \"192.168.10.3\",\r\n//     weeks: \"4\",\r\n//     admin: \"3\",\r\n//     budget: \"2023-11-06\",\r\n//     status: \"Y\",\r\n//     checked:false\r\n//   },\r\n//   {\r\n//   //  avatar: user4,\r\n//     id: \"System4\",\r\n//     email: \"MSSQL\",\r\n//     project: \"192.168.10.4\",\r\n//     weeks: \"352\",\r\n//     admin: \"4\",\r\n//     budget: \"2023-11-06\",\r\n//     status: \"N\",\r\n//     checked:false\r\n//   },\r\n//   {\r\n//   //  avatar: user5,\r\n//     id: \"System5\",\r\n//     email: \"Oracle\",\r\n//     project: \"192.168.10.5\",\r\n//     weeks: \"2\",\r\n//     admin: \"2\",\r\n//     budget: \"2023-11-06\",\r\n//     status: \"N\",\r\n//     checked:false\r\n//   },\r\n//   {\r\n//     //  avatar: user5,\r\n//     id: \"System5\",\r\n//     email: \"Oracle\",\r\n//     project: \"192.168.10.5\",\r\n//     weeks: \"6\",\r\n//     admin: \"1\",\r\n//     budget: \"2023-11-06\",\r\n//     status: \"N\",\r\n//     checked:false\r\n//   },\r\n//   {\r\n//     //  avatar: user5,\r\n//     id: \"System5\",\r\n//     email: \"Oracle\",\r\n//     project: \"192.168.10.5\",\r\n//     weeks: \"7\",\r\n//     admin: \"5\",\r\n//     budget: \"2023-11-06\",\r\n//     status: \"N\",\r\n//     checked:false\r\n//   },\r\n//   {\r\n//     //  avatar: user5,\r\n//     id: \"System5\",\r\n//     email: \"Oracle\",\r\n//     project: \"192.168.10.5\",\r\n//     weeks: \"127\",\r\n//     admin: \"3\",\r\n//     budget: \"2023-11-07\",\r\n//     status: \"N\",\r\n//     checked:false\r\n//   },\r\n//   {\r\n//     //  avatar: user5,\r\n//     id: \"System5\",\r\n//     email: \"Oracle\",\r\n//     project: \"192.168.10.5\",\r\n//     weeks: \"53\",\r\n//     admin: \"-\",\r\n//     budget: \"2023-11-06\",\r\n//     status: \"N\",\r\n//     checked:false\r\n//   },\r\n//   {\r\n//     //  avatar: user5,\r\n//     id: \"System5\",\r\n//     email: \"Oracle\",\r\n//     project: \"192.168.10.5\",\r\n//     weeks: \"42\",\r\n//     admin: \"-\",\r\n//     budget: \"2023-11-08\",\r\n//     status: \"N\",\r\n//     checked:false\r\n//   },\r\n//   {\r\n//     //  avatar: user5,\r\n//     id: \"System5\",\r\n//     email: \"Oracle\",\r\n//     project: \"192.168.10.5\",\r\n//     weeks: \"35\",\r\n//     admin: \"-\",\r\n//     budget: \"2023-11-06\",\r\n//     status: \"N\",\r\n//     checked:false\r\n//   },\r\n// ];\r\n// const [checkboxes, setCheckboxes] = useState(tableData);\r\n//\r\n// const handleSelectAll = () => {\r\n//   const updatedCheckboxes = checkboxes.map(checkbox => ({\r\n//     ...checkbox,\r\n//     checked: !checkboxes.every(cb => cb.checked)\r\n//   }));\r\n//   setCheckboxes(updatedCheckboxes);\r\n// };\r\n//\r\n// const handleCheckboxChange = (id) => {\r\n//   const updatedCheckboxes = checkboxes.map(checkbox =>\r\n//       checkbox.id === id ? { ...checkbox, checked: !checkbox.checked } : checkbox\r\n//   );\r\n//   setCheckboxes(updatedCheckboxes);\r\n// };\r\n\r\n\r\n\r\n","import { Col, Row } from \"reactstrap\";\r\nimport ProjectTables from \"../components/dashboard/ProjectTable\";\r\n\r\nimport { CardTitle,Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nconst IManage = () => {\r\n  return (\r\n    <div>\r\n      {/***Table ***/}\r\n      <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\r\n            <span style={{fontSize:23}}>시스템 관리 솔루션</span>\r\n            <span style={{float:\"right\"}}>\r\n            <Link to=\"../Forms\" style={{textDecorationLine:'none',color:'black'}}>\r\n            <Button className=\"btn\" outline color=\"secondary\">\r\n                  시스템 등록\r\n                </Button>\r\n            </Link>\r\n            </span>\r\n          </CardTitle>\r\n          \r\n      <Row>\r\n        \r\n        <Col lg=\"12\">\r\n          <ProjectTables/>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <span>\r\n          Starter 원본\r\n        </span>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IManage;\r\n","var _excluded = [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Adds border to all sides of table */\n  bordered: PropTypes.bool,\n  /** Removes all borders */\n  borderless: PropTypes.bool,\n  /** Adds custom class name to component */\n  className: PropTypes.string,\n  /**  */\n  cssModule: PropTypes.object,\n  /** Makes the table dark */\n  dark: PropTypes.bool,\n  /** Enables a hover state on the rows within `<tbody>` */\n  hover: PropTypes.bool,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]),\n  /** Responsive tables allow tables to be scrolled horizontally with ease */\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  responsiveTag: tagPropType,\n  /** Make tables more compact by cutting cell padding in half when setting size as sm. */\n  size: PropTypes.string,\n  /** Adds zebra-striping to any table row within the `<tbody>` */\n  striped: PropTypes.bool,\n  /** Add custom tag to the component */\n  tag: tagPropType\n};\nfunction Table(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    size = props.size,\n    bordered = props.bordered,\n    borderless = props.borderless,\n    striped = props.striped,\n    dark = props.dark,\n    hover = props.hover,\n    responsive = props.responsive,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'table' : _props$tag,\n    _props$responsiveTag = props.responsiveTag,\n    ResponsiveTag = _props$responsiveTag === void 0 ? 'div' : _props$responsiveTag,\n    innerRef = props.innerRef,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\".concat(responsive), cssModule);\n    return /*#__PURE__*/React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n  return table;\n}\nTable.propTypes = propTypes;\nexport default Table;"],"names":["TOKEN_TYPE","localStorage","getItem","ACCESS_TOKEN","REFRESH_TOKEN","SystemApi","axios","create","baseURL","headers","concat","getSystemList","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","get","sent","console","log","data","abrupt","t0","error","stop","apply","arguments","insertSystem","_ref3","_callee2","_ref2","systemId","systemName","systemDesc","ipAddr","systemType","systemCategory","_context2","post","_x","_useState","useState","_useState2","_slicedToArray","systems","setSystems","accessToken","username","useEffect","alert","window","location","fetchData","_jsx","children","Card","CardBody","_jsxs","Table","className","bordered","hover","type","map","system","index","Link","to","pathname","search","style","textDecorationLine","color","Button","outline","createDt","syncDt","syncYn","CardTitle","tag","fontSize","float","Row","Col","lg","ProjectTables","_excluded","_extends","Object","assign","bind","target","i","length","source","key","prototype","hasOwnProperty","call","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","propTypes","PropTypes","borderless","cssModule","dark","innerRef","responsive","responsiveTag","tagPropType","size","striped","props","_props$tag","Tag","_props$responsiveTag","ResponsiveTag","attributes","classes","mapToCssModules","classNames","table","React","ref","responsiveClassName"],"sourceRoot":""}