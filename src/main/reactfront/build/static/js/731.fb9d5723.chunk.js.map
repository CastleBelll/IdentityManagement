{"version":3,"file":"static/js/731.fb9d5723.chunk.js","mappings":"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","sources":["api/System/SystemApi.js","views/ui/Forms.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst TOKEN_TYPE = localStorage.getItem(\"tokenType\");\r\nlet ACCESS_TOKEN = localStorage.getItem(\"accessToken\");\r\nlet REFRESH_TOKEN = localStorage.getItem(\"refreshToken\");\r\n\r\nexport const SystemApi = axios.create({\r\n    baseURL: 'http://localhost:8080/system', // 백엔드 API 엔드포인트\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `${TOKEN_TYPE} ${ACCESS_TOKEN}`,\r\n        'REFRESH_TOKEN': REFRESH_TOKEN,\r\n    },\r\n});\r\n\r\n// API 호출\r\nexport const getSystemList = async () => {\r\n    try {\r\n        const response = await SystemApi.get('/select');\r\n        console.log('백엔드 응답:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('에러 발생:', error);\r\n        return []; // 에러 발생 시 빈 배열 반환\r\n    }\r\n};\r\n\r\nexport const insertSystem =\r\n    async ({ systemId, systemName, systemDesc, ipAddr, systemType, systemCategory\r\n    }) => {\r\n    try {\r\n        const data = { systemId, systemName, systemDesc, ipAddr, systemType, systemCategory\r\n        };\r\n        const response = await SystemApi.post('/save', data\r\n             // 다른 헤더도 필요하다면 추가 가능\r\n        );\r\n\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('에러 발생:', error);\r\n        return []; // 에러 발생 시 빈 배열 반환\r\n    }\r\n};\r\n\r\nexport const updateSystem = async () => {\r\n    try {\r\n        const response = await SystemApi.get('/update');\r\n        console.log('백엔드 응답:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('에러 발생:', error);\r\n        return []; // 에러 발생 시 빈 배열 반환\r\n    }\r\n};\r\n\r\nexport const deleteSystem = async () => {\r\n    try {\r\n        const response = await SystemApi.get('/delete');\r\n        console.log('백엔드 응답:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('에러 발생:', error);\r\n        return []; // 에러 발생 시 빈 배열 반환\r\n    }\r\n};\r\n","import {\r\n  Card,\r\n  Row,\r\n  Col,\r\n  CardTitle,\r\n  CardBody,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\n\r\nimport React, { useState } from 'react';\r\nimport {insertSystem} from \"../../api/System/SystemApi\";\r\n\r\nconst Forms = () => {\r\n\r\n  const [formData, setFormData] = useState({\r\n    systemId: \"\",\r\n    systemName: \"\",\r\n    systemDesc: \"\",\r\n    ipAddr: \"\",\r\n    systemType: \"\",\r\n    systemCategory: \"\"\r\n  });\r\n\r\n\r\n\r\n  const handleFirstDropdownChange = (e) => {\r\n    const selectedCategory = e.target.value;\r\n    // 선택된 카테고리에 따라 두 번째 드롭다운의 옵션을 동적으로 설정\r\n    const updatedOptions = getSystemTypeOptions(selectedCategory);\r\n\r\n    setFormData({\r\n      ...formData,\r\n      systemCategory: selectedCategory,\r\n      systemType: '', // 선택된 카테고리 변경 시 두 번째 드롭다운 초기화\r\n    });\r\n\r\n    setSecondDropdownOptions(updatedOptions);\r\n  };\r\n  const handleSecondDropdownChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      systemType: e.target.value,\r\n    });\r\n  };\r\n\r\n  const getSystemTypeOptions = (selectedCategory) => {\r\n    // 선택된 카테고리에 따라 동적으로 옵션을 설정\r\n    switch (selectedCategory) {\r\n      case 'OS':\r\n        return ['','Windows', 'Linux'];\r\n      case 'DBMS':\r\n        return ['','Oracle', 'MsSQL', 'MySQL'];\r\n      default:\r\n        return [''];\r\n    }\r\n  };\r\n\r\n  const [secondDropdownOptions, setSecondDropdownOptions] = useState([]);\r\n  \r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = insertSystem(formData);\r\n      alert('정상적으로 등록되었습니다.');\r\n\r\n      console.log(response.data); // 서버로부터 받은 응답 확인\r\n\r\n      // 글쓰기가 성공하면 리다이렉션 또는 다른 작업 수행\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 500) {\r\n        // 서버에서 오류 응답을 받은 경우\r\n        alert(error.response.data);\r\n        console.error(error.response.data.toString());\r\n      } else {\r\n        // 요청 자체에 오류가 있는 경우\r\n        alert('게시물 등록에 실패했습니다. 다시 시도해주세요.');\r\n\r\n        console.error('Error creating post:', error.message);\r\n      }\r\n    }\r\n\r\n    console.log(formData);\r\n\r\n  };\r\n\r\n  return (\r\n\r\n      <Row>\r\n        <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\r\n          <span style={{fontSize:23}}>시스템 등록</span>\r\n          <span style={{float:\"right\"}}>\r\n            <span style={{textDecorationLine:'none',color:'black'}}>\r\n            </span>\r\n            </span>\r\n        </CardTitle>\r\n        <Col>\r\n          {/* --------------------------------------------------------------------------------*/}\r\n          {/* Card-1*/}\r\n          {/* --------------------------------------------------------------------------------*/}\r\n          <Card>\r\n            <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\r\n              <i className=\"bi bi-bell me-2\"> </i>\r\n            </CardTitle>\r\n            <CardBody>\r\n              <Form onSubmit={handleSubmit}>\r\n                <FormGroup>\r\n                  <Label for=\"systemId\">System ID</Label>\r\n                  <Input\r\n                      id=\"systemId\"\r\n                      name=\"systemId\"\r\n                      placeholder=\"System ID\"\r\n                      type=\"text\"\r\n                      value={formData.systemId}\r\n                      onChange={handleChange}\r\n                      required\r\n                  />\r\n\r\n                  <a\r\n                      className=\"btn\"\r\n                      outline color=\"secondary\"\r\n                      style={{float:\"right\",marginTop:\"5px\"}}\r\n                  >\r\n                    ID Check\r\n                  </a>\r\n\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"systemName\">System Name</Label>\r\n                  <Input\r\n                      id=\"systemName\"\r\n                      name=\"systemName\"\r\n                      placeholder=\"System Name\"\r\n                      type=\"text\"\r\n                      value={formData.systemName}\r\n                      onChange={handleChange}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"systemDesc\">System Desc</Label>\r\n                  <Input\r\n                      id=\"systemDesc\"\r\n                      name=\"systemDesc\"\r\n                      placeholder=\"System Desc\"\r\n                      type=\"text\"\r\n                      value={formData.systemDesc}\r\n                      onChange={handleChange}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"systemCategorySelect\">System Category</Label>\r\n                  <Input id=\"systemCategorySelect\"\r\n                         name=\"select\"\r\n                         type=\"select\"\r\n                         value={formData.systemCategory}\r\n                         onChange={handleFirstDropdownChange}\r\n                         placeholder=\"-\"\r\n                         required\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"OS\">OS</option>\r\n                    <option value=\"DBMS\">DBMS</option>\r\n                  </Input>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <Label for=\"systemTypeSelect\">System Type</Label>\r\n                  <Input id=\"systemTypeSelect\"\r\n                         name=\"systemType\"\r\n                         type=\"select\"\r\n                         required\r\n                         placeholder=\"-\"\r\n                         value={formData.systemType}\r\n                         onChange={handleSecondDropdownChange}\r\n                  >\r\n\r\n                    {secondDropdownOptions.map((option, index) => (\r\n                        <option key={index} value={option}>\r\n                          {option}\r\n                        </option>\r\n                    ))}\r\n                  </Input>\r\n\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"ipAddr\">IP</Label>\r\n                  <Input\r\n                      id=\"ipAddr\"\r\n                      name=\"ipAddr\"\r\n                      placeholder=\"000.000.000.000\"\r\n                      type=\"text\"\r\n                      value={formData.ipAddr}\r\n                      onChange={handleChange}\r\n                  />\r\n                </FormGroup>\r\n                <Button\r\n                    type=\"submit\"\r\n                    style={{float:\"right\"}}>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n  );\r\n};\r\nexport default Forms;\r\n"],"names":["TOKEN_TYPE","localStorage","getItem","ACCESS_TOKEN","REFRESH_TOKEN","SystemApi","axios","create","baseURL","headers","concat","getSystemList","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","get","sent","console","log","data","abrupt","t0","error","stop","apply","arguments","insertSystem","_ref3","_callee2","_ref2","systemId","systemName","systemDesc","ipAddr","systemType","systemCategory","_context2","post","_x","_useState","useState","_useState2","_slicedToArray","formData","setFormData","getSystemTypeOptions","selectedCategory","_useState3","_useState4","secondDropdownOptions","setSecondDropdownOptions","handleChange","e","_objectSpread","_defineProperty","target","name","value","_jsxs","Row","children","CardTitle","tag","className","_jsx","style","fontSize","float","textDecorationLine","color","Col","Card","CardBody","Form","onSubmit","preventDefault","alert","status","toString","message","FormGroup","Label","for","Input","id","placeholder","type","onChange","required","outline","marginTop","updatedOptions","map","option","index","Button"],"sourceRoot":""}