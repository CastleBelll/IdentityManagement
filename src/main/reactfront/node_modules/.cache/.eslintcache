[{"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\index.js":"1","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\reportWebVitals.js":"2","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\App.js":"3","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\layouts\\loader\\Loader.js":"4","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\routes\\Router.js":"5","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\layouts\\FullLayout.js":"6","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\SignUpPage.js":"7","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\IManage.js":"8","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\LoginPage.js":"9","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\Starter.js":"10","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\ui\\Breadcrumbs.js":"11","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\ui\\Grid.js":"12","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\ui\\Badges.js":"13","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\ui\\AdminForms.js":"14","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\ui\\Forms.js":"15","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\ui\\Buttons.js":"16","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\ui\\Alerts.js":"17","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\ui\\Tables.js":"18","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\ui\\Cards.js":"19","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\layouts\\Sidebar.js":"20","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\layouts\\Header.js":"21","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\api\\user\\UserAPI.js":"22","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\api\\auth\\AuthAPI.js":"23","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\components\\dashboard\\Blog.js":"24","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\components\\dashboard\\SystemList.js":"25","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\api\\System\\SystemApi.js":"26","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\api\\System\\SystemAdminApi.js":"27","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\components\\dashboard\\SystemDetail.js":"28","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\layout\\ModalStyles.js":"29"},{"size":721,"mtime":1701933233977,"results":"30","hashOfConfig":"31"},{"size":375,"mtime":1701247917989,"results":"32","hashOfConfig":"31"},{"size":235,"mtime":1701933243288,"results":"33","hashOfConfig":"31"},{"size":272,"mtime":1701247917979,"results":"34","hashOfConfig":"31"},{"size":2007,"mtime":1701247918017,"results":"35","hashOfConfig":"31"},{"size":758,"mtime":1701247917966,"results":"36","hashOfConfig":"31"},{"size":2108,"mtime":1701914137042,"results":"37","hashOfConfig":"31"},{"size":969,"mtime":1701914137040,"results":"38","hashOfConfig":"31"},{"size":2939,"mtime":1701247918037,"results":"39","hashOfConfig":"31"},{"size":3385,"mtime":1701247918043,"results":"40","hashOfConfig":"31"},{"size":1386,"mtime":1701247918056,"results":"41","hashOfConfig":"31"},{"size":4507,"mtime":1701247918083,"results":"42","hashOfConfig":"31"},{"size":7423,"mtime":1701247918052,"results":"43","hashOfConfig":"31"},{"size":5269,"mtime":1701247918047,"results":"44","hashOfConfig":"31"},{"size":6945,"mtime":1701247918077,"results":"45","hashOfConfig":"31"},{"size":11071,"mtime":1701247918060,"results":"46","hashOfConfig":"31"},{"size":602,"mtime":1701842632753,"results":"47","hashOfConfig":"31"},{"size":4793,"mtime":1701842632634,"results":"48","hashOfConfig":"31"},{"size":9517,"mtime":1701247918071,"results":"49","hashOfConfig":"31"},{"size":2312,"mtime":1701247917975,"results":"50","hashOfConfig":"31"},{"size":2449,"mtime":1701247917970,"results":"51","hashOfConfig":"31"},{"size":1960,"mtime":1701914137030,"results":"52","hashOfConfig":"31"},{"size":709,"mtime":1701247917829,"results":"53","hashOfConfig":"31"},{"size":558,"mtime":1701247917921,"results":"54","hashOfConfig":"31"},{"size":9164,"mtime":1701938614508,"results":"55","hashOfConfig":"31"},{"size":2563,"mtime":1701936419483,"results":"56","hashOfConfig":"31"},{"size":1118,"mtime":1701247917824,"results":"57","hashOfConfig":"31"},{"size":8248,"mtime":1701939054267,"results":"58","hashOfConfig":"31"},{"size":400,"mtime":1701937601355,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q0hbaf",{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\index.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\App.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\layouts\\loader\\Loader.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\routes\\Router.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\layouts\\FullLayout.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\SignUpPage.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\IManage.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\LoginPage.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\Starter.js",["152","153","154","155","156"],[],"import {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardGroup,\r\n  Button,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Blog from \"../components/dashboard/Blog\";\r\nconst ACCESS_TOKEN = localStorage.getItem('accessToken');\r\nconst username = localStorage.getItem(\"userId\");\r\nconsole.log(ACCESS_TOKEN + \" \" + username);\r\nconst Starter = () => {\r\n  return (\r\n    <div>\r\n     \r\n      <h5 className=\"mb-3\">간편한 계정관리 솔루션</h5>\r\n      \r\n      <Row>\r\n        <Col md=\"6\" lg=\"4\">\r\n          <Card body>\r\n            <CardTitle tag=\"h5\">다양한 계정을 하나의 접속으로 관리</CardTitle>\r\n            <CardText>\r\n              With supporting text below as a natural lead-in to additional\r\n              content.\r\n            </CardText>\r\n            <div>\r\n              <Button color=\"light-warning\">Go somewhere</Button>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n        <Col md=\"6\" lg=\"4\">\r\n          <Card body className=\"text-center\">\r\n            <CardTitle tag=\"h5\">Special Title Treatment</CardTitle>\r\n            <CardText>\r\n              With supporting text below as a natural lead-in to additional\r\n              content.\r\n            </CardText>\r\n            <div>\r\n              <Button color=\"light-danger\">Go somewhere</Button>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n      {/* --------------------------------------------------------------------------------*/}\r\n      {/* Card-2*/}\r\n      {/* --------------------------------------------------------------------------------*/}\r\n      <Row>\r\n        <h5 className=\"mb-3 mt-3\">Colored Card</h5>\r\n        \r\n      \r\n       \r\n        <Col md=\"6\" lg=\"3\">\r\n          <Card body color=\"light-warning\">\r\n            <CardTitle tag=\"h5\">Special Title Treatment</CardTitle>\r\n            <CardText>\r\n              With supporting text below as a natural lead-in to additional\r\n              content.\r\n            </CardText>\r\n            <div>\r\n              <Button>Button</Button>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n        <Col md=\"6\" lg=\"3\">\r\n          <Card body color=\"light-info\">\r\n            <CardTitle tag=\"h5\">Special Title Treatment</CardTitle>\r\n            <CardText>\r\n              With supporting text below as a natural lead-in to additional\r\n              content.\r\n            </CardText>\r\n            <div>\r\n              <Button>Button</Button>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n        <Col md=\"6\" lg=\"3\">\r\n          <Card body color=\"light-success\">\r\n            <CardTitle tag=\"h5\">Special Title Treatment</CardTitle>\r\n            <CardText>\r\n              With supporting text below as a natural lead-in to additional\r\n              content.\r\n            </CardText>\r\n            <div>\r\n              <Button>Button</Button>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n        <Col md=\"6\" lg=\"3\">\r\n          <Card body color=\"light-danger\">\r\n            <CardTitle tag=\"h5\">Special Title Treatment</CardTitle>\r\n            <CardText>\r\n              With supporting text below as a natural lead-in to additional\r\n              content.\r\n            </CardText>\r\n            <div>\r\n              <Button>Button</Button>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n  \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Starter;\r\n","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\ui\\Breadcrumbs.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\ui\\Grid.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\ui\\Badges.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\ui\\AdminForms.js",["157"],[],"import {\r\n  Card,\r\n  Row,\r\n  Col,\r\n  CardTitle,\r\n  CardBody,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport {insertSystemAdmin} from \"../../api/System/SystemAdminApi\";\r\n\r\nconst AdminForms = () => {\r\n\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const systemId = searchParams.get('param');\r\n  const userId = localStorage.getItem('userId');\r\n\r\n  const [formData, setFormData] = useState({\r\n    systemId: systemId,\r\n    systemAdminId: \"\",\r\n    systemAdminName: \"\",\r\n    systemAdminPassword:\"\",\r\n    userId: userId\r\n  });\r\nconsole.log(formData);\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = insertSystemAdmin(formData);\r\n      alert('정상적으로 등록되었습니다.');\r\n\r\n      console.log(response.data); // 서버로부터 받은 응답 확인\r\n\r\n      // 글쓰기가 성공하면 리다이렉션 또는 다른 작업 수행\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 500) {\r\n        // 서버에서 오류 응답을 받은 경우\r\n        alert(error.response.data);\r\n        console.error(error.response.data.toString());\r\n      } else {\r\n        // 요청 자체에 오류가 있는 경우\r\n        alert('게시물 등록에 실패했습니다. 다시 시도해주세요.');\r\n\r\n        console.error('Error creating post:', error.message);\r\n      }\r\n    }\r\n\r\n    console.log(formData);\r\n\r\n  };\r\n\r\n  return (\r\n\r\n      <Row>\r\n        <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\r\n          <span style={{fontSize:23}}>시스템 관리자 등록</span>\r\n          <span style={{float:\"right\"}}>\r\n            <span style={{textDecorationLine:'none',color:'black'}}>\r\n            </span>\r\n            </span>\r\n        </CardTitle>\r\n        <Col>\r\n          {/* --------------------------------------------------------------------------------*/}\r\n          {/* Card-1*/}\r\n          {/* --------------------------------------------------------------------------------*/}\r\n          <Card>\r\n            <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\r\n              <i className=\"bi bi-bell me-2\"> </i>\r\n            </CardTitle>\r\n            <CardBody>\r\n              <Form onSubmit={handleSubmit}>\r\n                <FormGroup>\r\n                  <Label for=\"systemId\">System ID</Label>\r\n                  <Input\r\n                      id=\"systemId\"\r\n                      name=\"systemId\"\r\n                      placeholder=\"System ID\"\r\n                      type=\"text\"\r\n                      value={systemId}\r\n                      required\r\n                  />\r\n                  <FormGroup>\r\n                    <Label for=\"userId\">USER ID</Label>\r\n                    <Input\r\n                        id=\"userId\"\r\n                        name=\"userId\"\r\n                        placeholder=\"User ID\"\r\n                        type=\"text\"\r\n                        value={userId}\r\n                        required\r\n                    />\r\n\r\n\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"systemAdminName\">System Admin Name</Label>\r\n                  <Input\r\n                      id=\"systemAdminName\"\r\n                      name=\"systemAdminName\"\r\n                      placeholder=\"System Admin Name\"\r\n                      type=\"text\"\r\n                      value={formData.systemAdminName}\r\n                      onChange={handleChange}\r\n                  />\r\n                  <a\r\n                      className=\"btn\"\r\n                      outline color=\"secondary\"\r\n                      style={{float:\"right\",marginTop:\"5px\"}}\r\n                  >\r\n                    ID Check\r\n                  </a>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"systemAdminId\">System Admin Id</Label>\r\n                  <Input\r\n                      id=\"systemAdminId\"\r\n                      name=\"systemAdminId\"\r\n                      placeholder=\"systemAdminId\"\r\n                      type=\"text\"\r\n                      value={formData.systemAdminId}\r\n                      onChange={handleChange}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"systemAdminPassword\">System Admin Password</Label>\r\n                  <Input\r\n                      id=\"systemAdminPassword\"\r\n                      name=\"systemAdminPassword\"\r\n                      placeholder=\"systemAdminPassword\"\r\n                      type=\"password\"\r\n                      value={formData.systemAdminPassword}\r\n                      onChange={handleChange}\r\n                  />\r\n                </FormGroup>\r\n                <Button\r\n                    type=\"submit\"\r\n                    style={{float:\"right\"}}>\r\n                  Submit\r\n                </Button>\r\n                </FormGroup>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n  );\r\n};\r\nexport default AdminForms;\r\n","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\ui\\Forms.js",["158"],[],"import {\r\n  Card,\r\n  Row,\r\n  Col,\r\n  CardTitle,\r\n  CardBody,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\n\r\nimport React, { useState } from 'react';\r\nimport {insertSystem} from \"../../api/System/SystemApi\";\r\n\r\nconst Forms = () => {\r\n\r\n  const [formData, setFormData] = useState({\r\n    systemId: \"\",\r\n    systemName: \"\",\r\n    systemDesc: \"\",\r\n    ipAddr: \"\",\r\n    systemType: \"\",\r\n    systemCategory: \"\"\r\n  });\r\n\r\n\r\n\r\n  const handleFirstDropdownChange = (e) => {\r\n    const selectedCategory = e.target.value;\r\n    // 선택된 카테고리에 따라 두 번째 드롭다운의 옵션을 동적으로 설정\r\n    const updatedOptions = getSystemTypeOptions(selectedCategory);\r\n\r\n    setFormData({\r\n      ...formData,\r\n      systemCategory: selectedCategory,\r\n      systemType: '', // 선택된 카테고리 변경 시 두 번째 드롭다운 초기화\r\n    });\r\n\r\n    setSecondDropdownOptions(updatedOptions);\r\n  };\r\n  const handleSecondDropdownChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      systemType: e.target.value,\r\n    });\r\n  };\r\n\r\n  const getSystemTypeOptions = (selectedCategory) => {\r\n    // 선택된 카테고리에 따라 동적으로 옵션을 설정\r\n    switch (selectedCategory) {\r\n      case 'OS':\r\n        return ['','Windows', 'Linux'];\r\n      case 'DBMS':\r\n        return ['','Oracle', 'MsSQL', 'MySQL'];\r\n      default:\r\n        return [''];\r\n    }\r\n  };\r\n\r\n  const [secondDropdownOptions, setSecondDropdownOptions] = useState([]);\r\n  \r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = insertSystem(formData);\r\n      alert('정상적으로 등록되었습니다.');\r\n\r\n      console.log(response.data); // 서버로부터 받은 응답 확인\r\n\r\n      // 글쓰기가 성공하면 리다이렉션 또는 다른 작업 수행\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 500) {\r\n        // 서버에서 오류 응답을 받은 경우\r\n        alert(error.response.data);\r\n        console.error(error.response.data.toString());\r\n      } else {\r\n        // 요청 자체에 오류가 있는 경우\r\n        alert('게시물 등록에 실패했습니다. 다시 시도해주세요.');\r\n\r\n        console.error('Error creating post:', error.message);\r\n      }\r\n    }\r\n\r\n    console.log(formData);\r\n\r\n  };\r\n\r\n  return (\r\n\r\n      <Row>\r\n        <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\r\n          <span style={{fontSize:23}}>시스템 등록</span>\r\n          <span style={{float:\"right\"}}>\r\n            <span style={{textDecorationLine:'none',color:'black'}}>\r\n            </span>\r\n            </span>\r\n        </CardTitle>\r\n        <Col>\r\n          {/* --------------------------------------------------------------------------------*/}\r\n          {/* Card-1*/}\r\n          {/* --------------------------------------------------------------------------------*/}\r\n          <Card>\r\n            <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\r\n              <i className=\"bi bi-bell me-2\"> </i>\r\n            </CardTitle>\r\n            <CardBody>\r\n              <Form onSubmit={handleSubmit}>\r\n                <FormGroup>\r\n                  <Label for=\"systemId\">System ID</Label>\r\n                  <Input\r\n                      id=\"systemId\"\r\n                      name=\"systemId\"\r\n                      placeholder=\"System ID\"\r\n                      type=\"text\"\r\n                      value={formData.systemId}\r\n                      onChange={handleChange}\r\n                      required\r\n                  />\r\n\r\n                  <a\r\n                      className=\"btn\"\r\n                      outline color=\"secondary\"\r\n                      style={{float:\"right\",marginTop:\"5px\"}}\r\n                  >\r\n                    ID Check\r\n                  </a>\r\n\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"systemName\">System Name</Label>\r\n                  <Input\r\n                      id=\"systemName\"\r\n                      name=\"systemName\"\r\n                      placeholder=\"System Name\"\r\n                      type=\"text\"\r\n                      value={formData.systemName}\r\n                      onChange={handleChange}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"systemDesc\">System Desc</Label>\r\n                  <Input\r\n                      id=\"systemDesc\"\r\n                      name=\"systemDesc\"\r\n                      placeholder=\"System Desc\"\r\n                      type=\"text\"\r\n                      value={formData.systemDesc}\r\n                      onChange={handleChange}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"systemCategorySelect\">System Category</Label>\r\n                  <Input id=\"systemCategorySelect\"\r\n                         name=\"select\"\r\n                         type=\"select\"\r\n                         value={formData.systemCategory}\r\n                         onChange={handleFirstDropdownChange}\r\n                         placeholder=\"-\"\r\n                         required\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"OS\">OS</option>\r\n                    <option value=\"DBMS\">DBMS</option>\r\n                  </Input>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <Label for=\"systemTypeSelect\">System Type</Label>\r\n                  <Input id=\"systemTypeSelect\"\r\n                         name=\"systemType\"\r\n                         type=\"select\"\r\n                         required\r\n                         placeholder=\"-\"\r\n                         value={formData.systemType}\r\n                         onChange={handleSecondDropdownChange}\r\n                  >\r\n\r\n                    {secondDropdownOptions.map((option, index) => (\r\n                        <option key={index} value={option}>\r\n                          {option}\r\n                        </option>\r\n                    ))}\r\n                  </Input>\r\n\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"ipAddr\">IP</Label>\r\n                  <Input\r\n                      id=\"ipAddr\"\r\n                      name=\"ipAddr\"\r\n                      placeholder=\"000.000.000.000\"\r\n                      type=\"text\"\r\n                      value={formData.ipAddr}\r\n                      onChange={handleChange}\r\n                  />\r\n                </FormGroup>\r\n                <Button\r\n                    type=\"submit\"\r\n                    style={{float:\"right\"}}>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n  );\r\n};\r\nexport default Forms;\r\n","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\ui\\Buttons.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\ui\\Alerts.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\ui\\Tables.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\views\\ui\\Cards.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\layouts\\Sidebar.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\layouts\\Header.js",["159","160","161"],[],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Navbar,\r\n  Collapse,\r\n  Nav,\r\n  NavItem,\r\n  NavbarBrand,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Dropdown,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport user1 from \"../assets/images/users/user4.jpg\";\r\nimport icon from \"../assets/images/logos/im_icon1.png\";\r\n\r\nconst Header = () => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  const Handletoggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <Navbar color=\"white\" light expand=\"md\" className=\"fix-header\">\r\n      <div className=\"d-flex align-items-center\">\r\n        <div className=\"d-lg-block d-none me-5 pe-3\">\r\n        \r\n        <Link to=\"/starter\" style={{textDecorationLine:'none',color:'black'}}><img\r\n              src={icon}\r\n              alt=\"profile\"\r\n              className=\"rounded-circle\"\r\n              width=\"30\"\r\n            ></img><span> IdentityManagement</span></Link>\r\n        </div>\r\n      \r\n      </div>\r\n      <div className=\"hstack gap-2\">\r\n        <Button\r\n          color=\"primary\"\r\n          size=\"sm\"\r\n          className=\"d-sm-block d-md-none\"\r\n          onClick={Handletoggle}\r\n        >\r\n          {isOpen ? (\r\n            <i className=\"bi bi-x\"></i>\r\n          ) : (\r\n            <i className=\"bi bi-three-dots-vertical\"></i>\r\n          )}\r\n        </Button>\r\n      </div>\r\n\r\n{/*  우측상단 고정시키기 위해 남김 */}\r\n      <Collapse navbar isOpen={isOpen}>\r\n        <Nav className=\"me-auto\" navbar>\r\n\r\n        </Nav>\r\n        \r\n        {/* 우측 상단 계정 관리 */}\r\n        <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n          <DropdownToggle color=\"transparent\">\r\n            <img\r\n              src={user1}\r\n              alt=\"profile\"\r\n              className=\"rounded-circle\"\r\n              width=\"30\"\r\n            ></img>\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem header>Info</DropdownItem>\r\n            <DropdownItem>내 계정</DropdownItem>\r\n            <DropdownItem>관리 계정</DropdownItem>\r\n            <DropdownItem divider />\r\n            <DropdownItem>로그아웃</DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\api\\user\\UserAPI.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\api\\auth\\AuthAPI.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\components\\dashboard\\Blog.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\components\\dashboard\\SystemList.js",["162","163","164","165"],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\api\\System\\SystemApi.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\api\\System\\SystemAdminApi.js",[],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\components\\dashboard\\SystemDetail.js",["166","167","168","169"],[],"C:\\Users\\sad96\\IdeaProjects\\IdentityManagement\\src\\main\\reactfront\\src\\layout\\ModalStyles.js",[],[],{"ruleId":"170","severity":1,"message":"171","line":3,"column":3,"nodeType":"172","messageId":"173","endLine":3,"endColumn":10},{"ruleId":"170","severity":1,"message":"174","line":5,"column":3,"nodeType":"172","messageId":"173","endLine":5,"endColumn":11},{"ruleId":"170","severity":1,"message":"175","line":7,"column":3,"nodeType":"172","messageId":"173","endLine":7,"endColumn":15},{"ruleId":"170","severity":1,"message":"176","line":8,"column":3,"nodeType":"172","messageId":"173","endLine":8,"endColumn":12},{"ruleId":"170","severity":1,"message":"177","line":13,"column":8,"nodeType":"172","messageId":"173","endLine":13,"endColumn":12},{"ruleId":"178","severity":1,"message":"179","line":120,"column":19,"nodeType":"180","endLine":124,"endColumn":20},{"ruleId":"178","severity":1,"message":"179","line":129,"column":19,"nodeType":"180","endLine":133,"endColumn":20},{"ruleId":"170","severity":1,"message":"181","line":7,"column":3,"nodeType":"172","messageId":"173","endLine":7,"endColumn":10},{"ruleId":"170","severity":1,"message":"182","line":8,"column":3,"nodeType":"172","messageId":"173","endLine":8,"endColumn":14},{"ruleId":"170","severity":1,"message":"183","line":9,"column":3,"nodeType":"172","messageId":"173","endLine":9,"endColumn":23},{"ruleId":"170","severity":1,"message":"184","line":1,"column":30,"nodeType":"172","messageId":"173","endLine":1,"endColumn":41},{"ruleId":"170","severity":1,"message":"185","line":2,"column":9,"nodeType":"172","messageId":"173","endLine":2,"endColumn":15},{"ruleId":"186","severity":1,"message":"187","line":31,"column":8,"nodeType":"188","endLine":31,"endColumn":10,"suggestions":"189"},{"ruleId":"178","severity":1,"message":"179","line":98,"column":37,"nodeType":"180","endLine":98,"endColumn":83},{"ruleId":"170","severity":1,"message":"184","line":2,"column":38,"nodeType":"172","messageId":"173","endLine":2,"endColumn":49},{"ruleId":"170","severity":1,"message":"190","line":6,"column":9,"nodeType":"172","messageId":"173","endLine":6,"endColumn":20},{"ruleId":"170","severity":1,"message":"191","line":15,"column":29,"nodeType":"172","messageId":"173","endLine":15,"endColumn":47},{"ruleId":"186","severity":1,"message":"187","line":43,"column":8,"nodeType":"188","endLine":43,"endColumn":18,"suggestions":"192"},"no-unused-vars","'CardImg' is defined but never used.","Identifier","unusedVar","'CardBody' is defined but never used.","'CardSubtitle' is defined but never used.","'CardGroup' is defined but never used.","'Blog' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'NavItem' is defined but never used.","'NavbarBrand' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'useCallback' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'accessToken' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["193"],"'ButtonGroup' is defined but never used.","'setFormKeywordData' is assigned a value but never used.",["194"],{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [accessToken, navigate]",{"range":"199","text":"200"},"Update the dependencies array to be: [accessToken, navigate, systemId]",{"range":"201","text":"202"},[1107,1109],"[accessToken, navigate]",[1344,1354],"[accessToken, navigate, systemId]"]