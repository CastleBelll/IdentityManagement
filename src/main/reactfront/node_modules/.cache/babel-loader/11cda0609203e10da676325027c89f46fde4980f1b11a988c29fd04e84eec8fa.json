{"ast":null,"code":"import _regeneratorRuntime from\"C:/_server/SPRING_PROJECT/TestProject/src/main/reactfront/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/_server/SPRING_PROJECT/TestProject/src/main/reactfront/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from'axios';var TOKEN_TYPE=localStorage.getItem(\"tokenType\");var ACCESS_TOKEN=localStorage.getItem(\"accessToken\");var REFRESH_TOKEN=localStorage.getItem(\"refreshToken\");export var SystemAdminApi=axios.create({baseURL:'http://localhost:8080/system/admin',// 백엔드 API 엔드포인트\nheaders:{'Content-Type':'application/json','Authorization':\"\".concat(TOKEN_TYPE,\" \").concat(ACCESS_TOKEN),'REFRESH_TOKEN':REFRESH_TOKEN}});export var insertSystemAdmin=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref){var systemdId,systemAdminId,systemAdminName,systemAdminPassword,userId,data,response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:systemdId=_ref.systemdId,systemAdminId=_ref.systemAdminId,systemAdminName=_ref.systemAdminName,systemAdminPassword=_ref.systemAdminPassword,userId=_ref.userId;_context.prev=1;data={systemdId:systemdId,systemAdminId:systemAdminId,systemAdminName:systemAdminName,systemAdminPassword:systemAdminPassword,userId:userId};_context.next=5;return SystemAdminApi.post('/save',data// 다른 헤더도 필요하다면 추가 가능\n);case 5:response=_context.sent;return _context.abrupt(\"return\",response.data);case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);console.error('에러 발생:',_context.t0);return _context.abrupt(\"return\",[]);case 13:case\"end\":return _context.stop();}},_callee,null,[[1,9]]);}));return function insertSystemAdmin(_x){return _ref2.apply(this,arguments);};}();","map":{"version":3,"names":["axios","TOKEN_TYPE","localStorage","getItem","ACCESS_TOKEN","REFRESH_TOKEN","SystemAdminApi","create","baseURL","headers","concat","insertSystemAdmin","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","systemdId","systemAdminId","systemAdminName","systemAdminPassword","userId","data","response","wrap","_callee$","_context","prev","next","post","sent","abrupt","t0","console","error","stop","_x","apply","arguments"],"sources":["C:/_server/SPRING_PROJECT/TestProject/src/main/reactfront/src/api/System/SystemAdminApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst TOKEN_TYPE = localStorage.getItem(\"tokenType\");\r\nlet ACCESS_TOKEN = localStorage.getItem(\"accessToken\");\r\nlet REFRESH_TOKEN = localStorage.getItem(\"refreshToken\");\r\n\r\nexport const SystemAdminApi = axios.create({\r\n    baseURL: 'http://localhost:8080/system/admin', // 백엔드 API 엔드포인트\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `${TOKEN_TYPE} ${ACCESS_TOKEN}`,\r\n        'REFRESH_TOKEN': REFRESH_TOKEN,\r\n    },\r\n});\r\n\r\n\r\nexport const insertSystemAdmin =\r\n    async ({ systemdId, systemAdminId, systemAdminName, systemAdminPassword, userId}) => {\r\n        try {\r\n            const data = { systemdId, systemAdminId, systemAdminName, systemAdminPassword, userId\r\n            };\r\n            const response = await SystemAdminApi.post('/save', data\r\n                // 다른 헤더도 필요하다면 추가 가능\r\n            );\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('에러 발생:', error);\r\n            return []; // 에러 발생 시 빈 배열 반환\r\n        }\r\n    };\r\n"],"mappings":"8SAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,GAAM,CAAAC,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CACpD,GAAI,CAAAC,YAAY,CAAGF,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACtD,GAAI,CAAAE,aAAa,CAAGH,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAExD,MAAO,IAAM,CAAAG,cAAc,CAAGN,KAAK,CAACO,MAAM,CAAC,CACvCC,OAAO,CAAE,oCAAoC,CAAE;AAC/CC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,eAAe,IAAAC,MAAA,CAAKT,UAAU,MAAAS,MAAA,CAAIN,YAAY,CAAE,CAChD,eAAe,CAAEC,aACrB,CACJ,CAAC,CAAC,CAGF,MAAO,IAAM,CAAAM,iBAAiB,6BAAAC,KAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAC1B,SAAAC,QAAAC,IAAA,MAAAC,SAAA,CAAAC,aAAA,CAAAC,eAAA,CAAAC,mBAAA,CAAAC,MAAA,CAAAC,IAAA,CAAAC,QAAA,QAAAV,mBAAA,GAAAW,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAASX,SAAS,CAAAD,IAAA,CAATC,SAAS,CAAEC,aAAa,CAAAF,IAAA,CAAbE,aAAa,CAAEC,eAAe,CAAAH,IAAA,CAAfG,eAAe,CAAEC,mBAAmB,CAAAJ,IAAA,CAAnBI,mBAAmB,CAAEC,MAAM,CAAAL,IAAA,CAANK,MAAM,CAAAK,QAAA,CAAAC,IAAA,GAEjEL,IAAI,CAAG,CAAEL,SAAS,CAATA,SAAS,CAAEC,aAAa,CAAbA,aAAa,CAAEC,eAAe,CAAfA,eAAe,CAAEC,mBAAmB,CAAnBA,mBAAmB,CAAEC,MAAM,CAANA,MAC/E,CAAC,CAAAK,QAAA,CAAAE,IAAA,SACsB,CAAAvB,cAAc,CAACwB,IAAI,CAAC,OAAO,CAAEP,IAChD;AACJ,CAAC,QAFKC,QAAQ,CAAAG,QAAA,CAAAI,IAAA,QAAAJ,QAAA,CAAAK,MAAA,UAIPR,QAAQ,CAACD,IAAI,SAAAI,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAM,EAAA,CAAAN,QAAA,aAEpBO,OAAO,CAACC,KAAK,CAAC,QAAQ,CAAAR,QAAA,CAAAM,EAAO,CAAC,CAAC,OAAAN,QAAA,CAAAK,MAAA,UACxB,EAAE,2BAAAL,QAAA,CAAAS,IAAA,MAAApB,OAAA,gBAEhB,kBAdQ,CAAAL,iBAAiBA,CAAA0B,EAAA,SAAAzB,KAAA,CAAA0B,KAAA,MAAAC,SAAA,OAczB"},"metadata":{},"sourceType":"module","externalDependencies":[]}