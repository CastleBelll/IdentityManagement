{"ast":null,"code":"import _regeneratorRuntime from\"C:/_server/SPRING_PROJECT/TestProject/src/main/reactfront/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/_server/SPRING_PROJECT/TestProject/src/main/reactfront/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from\"axios\";var TOKEN_TYPE=localStorage.getItem(\"tokenType\");var ACCESS_TOKEN=localStorage.getItem(\"accessToken\");var REFRESH_TOKEN=localStorage.getItem(\"refreshToken\");/** CREATE CUSTOM AXIOS INSTANCE */export var UserApi=axios.create({baseURL:'http://localhost:8080',headers:{'Content-Type':'application/json','Authorization':\"\".concat(TOKEN_TYPE,\" \").concat(ACCESS_TOKEN),'REFRESH_TOKEN':REFRESH_TOKEN}});/** SIGNUP API */export var signUp=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref){var userId,userName,userPassword,data,response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:userId=_ref.userId,userName=_ref.userName,userPassword=_ref.userPassword;data={userId:userId,userName:userName,userPassword:userPassword};_context.next=4;return UserApi.post(\"/api/v1/user\",data);case 4:response=_context.sent;return _context.abrupt(\"return\",response.data);case 6:case\"end\":return _context.stop();}},_callee);}));return function signUp(_x){return _ref2.apply(this,arguments);};}();/** 회원조회 API */export var fetchUser=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return UserApi.get(\"/api/v1/user\");case 2:response=_context2.sent;return _context2.abrupt(\"return\",response.data);case 4:case\"end\":return _context2.stop();}},_callee2);}));return function fetchUser(){return _ref3.apply(this,arguments);};}();/** 회원수정 API */export var updateUser=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data){var response;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return UserApi.put(\"/api/v1/user\",data);case 2:response=_context3.sent;return _context3.abrupt(\"return\",response.data);case 4:case\"end\":return _context3.stop();}},_callee3);}));return function updateUser(_x2){return _ref4.apply(this,arguments);};}();/** 회원탈퇴 API */export var deleteUser=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.next=2;return UserApi.delete(\"/api/v1/user\");case 2:case\"end\":return _context4.stop();}},_callee4);}));return function deleteUser(){return _ref5.apply(this,arguments);};}();// 토큰 갱신\nvar refreshAccessToken=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(){var response;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.next=2;return UserApi.get(\"/api/v1/auth/refresh\");case 2:response=_context5.sent;ACCESS_TOKEN=response.data;localStorage.setItem('accessToken',ACCESS_TOKEN);UserApi.defaults.headers.common['Authorization']=\"\".concat(TOKEN_TYPE,\" \").concat(ACCESS_TOKEN);case 6:case\"end\":return _context5.stop();}},_callee5);}));return function refreshAccessToken(){return _ref6.apply(this,arguments);};}();// 토큰 유효성 검사\nUserApi.interceptors.response.use(function(response){return response;},/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(error){var originalRequest;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:originalRequest=error.config;if(!(error.response.status===403&&!originalRequest._retry)){_context6.next=5;break;}_context6.next=4;return refreshAccessToken();case 4:return _context6.abrupt(\"return\",UserApi(originalRequest));case 5:return _context6.abrupt(\"return\",Promise.reject(error));case 6:case\"end\":return _context6.stop();}},_callee6);}));return function(_x3){return _ref7.apply(this,arguments);};}());","map":{"version":3,"names":["axios","TOKEN_TYPE","localStorage","getItem","ACCESS_TOKEN","REFRESH_TOKEN","UserApi","create","baseURL","headers","concat","signUp","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","userId","userName","userPassword","data","response","wrap","_callee$","_context","prev","next","post","sent","abrupt","stop","_x","apply","arguments","fetchUser","_ref3","_callee2","_callee2$","_context2","get","updateUser","_ref4","_callee3","_callee3$","_context3","put","_x2","deleteUser","_ref5","_callee4","_callee4$","_context4","delete","refreshAccessToken","_ref6","_callee5","_callee5$","_context5","setItem","defaults","common","interceptors","use","_ref7","_callee6","error","originalRequest","_callee6$","_context6","config","status","_retry","Promise","reject","_x3"],"sources":["C:/_server/SPRING_PROJECT/TestProject/src/main/reactfront/src/api/user/UserAPI.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst TOKEN_TYPE = localStorage.getItem(\"tokenType\");\r\nlet ACCESS_TOKEN = localStorage.getItem(\"accessToken\");\r\nlet REFRESH_TOKEN = localStorage.getItem(\"refreshToken\");\r\n\r\n/** CREATE CUSTOM AXIOS INSTANCE */\r\nexport const UserApi = axios.create({\r\n    baseURL: 'http://localhost:8080',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `${TOKEN_TYPE} ${ACCESS_TOKEN}`,\r\n        'REFRESH_TOKEN': REFRESH_TOKEN,\r\n    },\r\n});\r\n\r\n/** SIGNUP API */\r\nexport const signUp = async ({ userId,userName, userPassword }) => {\r\n    const data = {userId, userName, userPassword };\r\n    const response = await UserApi.post(`/api/v1/user`, data);\r\n    return response.data;\r\n}\r\n/** 회원조회 API */\r\nexport const fetchUser = async () => {\r\n    const response = await UserApi.get(`/api/v1/user`);\r\n    return response.data;\r\n}\r\n/** 회원수정 API */\r\nexport const updateUser = async (data) => {\r\n    const response = await UserApi.put(`/api/v1/user`, data);\r\n    return response.data;\r\n}\r\n/** 회원탈퇴 API */\r\nexport const deleteUser = async () => {\r\n    await UserApi.delete(`/api/v1/user`);\r\n}\r\n// 토큰 갱신\r\nconst refreshAccessToken = async () => {\r\n    const response = await UserApi.get(`/api/v1/auth/refresh`);\r\n    ACCESS_TOKEN = response.data;\r\n    localStorage.setItem('accessToken', ACCESS_TOKEN);\r\n    UserApi.defaults.headers.common['Authorization'] = `${TOKEN_TYPE} ${ACCESS_TOKEN}`;\r\n}\r\n\r\n// 토큰 유효성 검사\r\nUserApi.interceptors.response.use((response) => {\r\n    return response;\r\n}, async (error) => {\r\n    const originalRequest = error.config;\r\n    if (error.response.status === 403 && !originalRequest._retry) {\r\n        await refreshAccessToken();\r\n        return UserApi(originalRequest);\r\n    }\r\n    return Promise.reject(error);\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}